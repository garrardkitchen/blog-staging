<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Garrard Kitchen – Vscode</title><link>https://blog-dev.garrardkitchen.com/tags/vscode/</link><description>Recent content in Vscode on Garrard Kitchen</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 23 Apr 2025 13:29:21 +0100</lastBuildDate><atom:link href="https://blog-dev.garrardkitchen.com/tags/vscode/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting Up a Model Context Protocol (MCP) Remote Server in VSCode</title><link>https://blog-dev.garrardkitchen.com/blog/mcp-server-example/</link><pubDate>Wed, 23 Apr 2025 13:29:21 +0100</pubDate><guid>https://blog-dev.garrardkitchen.com/blog/mcp-server-example/</guid><description>
&lt;h2>Summary&lt;span class="hx-absolute -hx-mt-20" id="summary">&lt;/span>
&lt;a href="#summary" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>This guide walks you through the process of connecting a Model Context Protocol (MCP) remote server to Visual Studio Code (VSCode). You&amp;rsquo;ll learn what MCP is, why it&amp;rsquo;s useful, and how to set up and use an MCP server to provide richer, real-time context to AI-powered tools like GitHub Copilot.&lt;/p>
&lt;hr>
&lt;h2>What is Model Context Protocol (MCP)?&lt;span class="hx-absolute -hx-mt-20" id="what-is-model-context-protocol-mcp">&lt;/span>
&lt;a href="#what-is-model-context-protocol-mcp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Model Context Protocol (MCP) is an open protocol that standardizes how applications supply context to large language models (LLMs), similar to how USB-C standardizes device connections. It enables AI tools to integrate with local and remote data sources, supporting agent workflows, flexibility between vendors, and secure handling of user data. MCP follows a client-server architecture with hosts, clients, and servers working together.&lt;/p>
&lt;p>For more information, see the &lt;a href="https://modelcontext.org/" target="_blank" rel="noopener">Model Context Protocol website&lt;/a>.&lt;/p>
&lt;h2>Why Use an MCP Server?&lt;span class="hx-absolute -hx-mt-20" id="why-use-an-mcp-server">&lt;/span>
&lt;a href="#why-use-an-mcp-server" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>An MCP server acts as a bridge between your development environment and AI tools. It streams real-time context about your workspace, allowing AI assistants to provide more relevant and accurate suggestions. This is especially useful for:&lt;/p>
&lt;ul>
&lt;li>Keeping AI tools up-to-date with your latest changes&lt;/li>
&lt;li>Improving privacy by standardizing what context is shared&lt;/li>
&lt;li>Enabling interoperability between different editors and AI services&lt;/li>
&lt;/ul>
&lt;h2>Step-by-Step: Adding an MCP Server in VSCode&lt;span class="hx-absolute -hx-mt-20" id="step-by-step-adding-an-mcp-server-in-vscode">&lt;/span>
&lt;a href="#step-by-step-adding-an-mcp-server-in-vscode" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Get the MCP Server Code&lt;/strong>&lt;/p>
&lt;p>Download or clone the MCP server implementation from the &lt;a href="https://github.com/garrardkitchen/mcp-server-example" target="_blank" rel="noopener">MCP Server repository&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Open the Agent Pane in VSCode&lt;/strong>&lt;/p>
&lt;p>Move to the Agent pane and press the tools icon:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example.png" alt="Agent pane tools icon" loading="lazy" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Add More Tools&lt;/strong>&lt;/p>
&lt;p>This will open a list of available tools. Select the &lt;code>+ Add More Tools&lt;/code> option:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-1.png" alt="Add More Tools" loading="lazy" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Add MCP Server&lt;/strong>&lt;/p>
&lt;p>Click on &lt;code>+ Add MCP Server...&lt;/code>:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-2.png" alt="Add MCP Server" loading="lazy" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Select Server Type&lt;/strong>&lt;/p>
&lt;p>Since MCP servers uses HTTP to push real-time events, select the highlighted HTTP Server option:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-3.png" alt="Select HTTP Server" loading="lazy" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Enter Server Details&lt;/strong>&lt;/p>
&lt;p>Enter your MCP server&amp;rsquo;s URL and a unique ID. After this, a new server entry will be created in your &lt;code>.vscode/mcp.json&lt;/code> file:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-4.png" alt="mcp.json entry" loading="lazy" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Start the MCP Server&lt;/strong>&lt;/p>
&lt;p>Press the start button to activate the connection:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-5.png" alt="Start MCP Server" loading="lazy" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Interact with the Agent&lt;/strong>&lt;/p>
&lt;p>Now, go to your Agent pane. For example, you might ask the agent to look up a person. The agent may prompt you for more information:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-7.png" alt="Agent prompt" loading="lazy" />&lt;/p>
&lt;p>After providing the requested input and clicking continue, you&amp;rsquo;ll see the agent&amp;rsquo;s response:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-8.png" alt="Agent response" loading="lazy" />&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>Troubleshooting&lt;span class="hx-absolute -hx-mt-20" id="troubleshooting">&lt;/span>
&lt;a href="#troubleshooting" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>If you&amp;rsquo;re not receiving the responses you expect, or if you want to test and interact with your MCP server(s) outside of the VSCode environment, you can use the MCP Inspector. This tool provides a user-friendly interface for testing and debugging your MCP servers. &lt;a href="https://github.com/modelcontextprotocol/inspector" target="_blank" rel="noopener">Access the MCP Inspector source code here&lt;/a>.&lt;/p>
&lt;p>To install the inspector, enter this into your terminal:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npx @modelcontextprotocol/inspector dotnet run&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>This then starts the MCP Inspector. Click on the HTTP URL to access the Inspector:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Starting MCP inspector...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">⚙️ Proxy server listening on port &lt;span class="m">6277&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">🔍 MCP Inspector is up and running at http://127.0.0.1:6274 🚀
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">New SSE connection&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>This is how my MCP Remote Server looks in the Inspector. I have listed the tools to review WhoIs and have enter my name to get a response:&lt;/p>
&lt;p>
&lt;img src="../img/mcp-server-example-9.png" alt="alt text" loading="lazy" />&lt;/p>
&lt;hr>
&lt;h2>How Does This Help?&lt;span class="hx-absolute -hx-mt-20" id="how-does-this-help">&lt;/span>
&lt;a href="#how-does-this-help" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>By connecting an MCP server, you enable VSCode and its AI-powered extensions (like Copilot) to access richer, real-time context about your project. This leads to smarter, more relevant suggestions and a more seamless development experience.&lt;/p>
&lt;hr>
&lt;h2>Terminology&lt;span class="hx-absolute -hx-mt-20" id="terminology">&lt;/span>
&lt;a href="#terminology" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Model Context Protocol (MCP):&lt;/strong> An open standard for sharing workspace and project context between editors, AI tools, and services. &lt;a href="https://modelcontextprotocol.io/introduction" target="_blank" rel="noopener">Learn more&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Server-Sent Events (SSE):&lt;/strong>&lt;/p>
&lt;p>In relation to MCP, SSE is a way for an MCP server to push real-time updates or context information to connected clients (such as editors or AI tools) over HTTP. With SSE, the server can continuously stream data—like file changes, user actions, or other context—without the client needing to repeatedly poll for updates. This enables efficient, low-latency communication and ensures that AI tools always have the latest context from the user&amp;rsquo;s environment.&lt;/p>
&lt;p>&lt;strong>In summary:&lt;/strong>&lt;/p>
&lt;p>SSE allows an MCP server to broadcast context changes to clients in real time, improving the responsiveness and accuracy of AI-powered features in tools that support MCP.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;a href="https://modelcontextprotocol.io/introduction" target="_blank" rel="noopener">Model Context Protocol (MCP) Website&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/modelcontextprotocol/" target="_blank" rel="noopener">MCP GitHub Organization&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events" target="_blank" rel="noopener">Server-Sent Events (MDN)&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Prompts</title><link>https://blog-dev.garrardkitchen.com/blog/prompts/</link><pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate><guid>https://blog-dev.garrardkitchen.com/blog/prompts/</guid><description>
&lt;h2>Summary&lt;span class="hx-absolute -hx-mt-20" id="summary">&lt;/span>
&lt;a href="#summary" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>This post explains what prompts are in the context of GitHub Copilot Chat, how to create reusable prompts in the &lt;code>.github/prompts&lt;/code> directory, and how to automatically include them in Copilot Chat using the &lt;code>github.copilot.chat.codeGeneration.instructions&lt;/code> setting. An example and useful references are provided.&lt;/p>
&lt;p>For more tips on writing effective prompts and using Copilot efficiently, see the &lt;a href="#best-practices-for-using-github-copilot" >Best Practices for Using GitHub Copilot&lt;/a> section below.&lt;/p>
&lt;h2>Understanding Prompts in GitHub Copilot Chat&lt;span class="hx-absolute -hx-mt-20" id="understanding-prompts-in-github-copilot-chat">&lt;/span>
&lt;a href="#understanding-prompts-in-github-copilot-chat" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Prompts are instructions or context you provide to GitHub Copilot Chat to guide its code generation or responses. Well-crafted prompts help Copilot understand your intent, resulting in more accurate and relevant suggestions.&lt;/p>
&lt;h2>Creating Custom Prompts&lt;span class="hx-absolute -hx-mt-20" id="creating-custom-prompts">&lt;/span>
&lt;a href="#creating-custom-prompts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>You can create reusable prompts by adding &lt;code>.prompt.md&lt;/code> files in your repository’s &lt;code>.github/prompts&lt;/code> directory. Each file should contain a specific instruction or context you want Copilot to use.&lt;/p>
&lt;p>&lt;strong>Steps:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>Create a &lt;code>.github/prompts&lt;/code> directory in your repository if it doesn’t exist.&lt;/li>
&lt;li>Add a Markdown file (e.g., &lt;code>readme.prompt.md&lt;/code>) with your prompt content.&lt;/li>
&lt;/ol>
&lt;p>Example (&lt;code>.github/prompts/readme.prompt.md&lt;/code>):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">Always use 2 spaces for indentation and single quotes for strings.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Automatically Including Prompts in Copilot Chat (User or Workspace settings)&lt;span class="hx-absolute -hx-mt-20" id="automatically-including-prompts-in-copilot-chat-user-or-workspace-settings">&lt;/span>
&lt;a href="#automatically-including-prompts-in-copilot-chat-user-or-workspace-settings" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>To have Copilot Chat automatically use your custom prompts, configure the &lt;code>github.copilot.chat.codeGeneration.instructions&lt;/code> setting in your workspace settings:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;github.copilot.chat.codeGeneration.instructions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;readme.prompt.md&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Automatically Include Prompts in Copilot Chat (Folder settings)&lt;span class="hx-absolute -hx-mt-20" id="automatically-include-prompts-in-copilot-chat-folder-settings">&lt;/span>
&lt;a href="#automatically-include-prompts-in-copilot-chat-folder-settings" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>To have Copilot Chat automatically use your custom prompts, configure the &lt;code>github.copilot.chat.codeGeneration.instructions&lt;/code> setting in your Folder settings (has highest priority and will override both User and Workspace settings):&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">.vscode/settings.json&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;github.copilot.chat.codeGeneration.instructions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;.github/prompts/readme.prompt.md&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hx-overflow-x-auto hx-mt-6 hx-flex hx-flex-col hx-rounded-lg hx-border hx-py-4 hx-px-4 contrast-more:hx-border-current contrast-more:dark:hx-border-current hx-border-blue-200 hx-bg-blue-100 hx-text-blue-900 dark:hx-border-blue-200/30 dark:hx-bg-blue-900/30 dark:hx-text-blue-200">
&lt;p class="hx-flex hx-items-center hx-font-medium">&lt;svg height=16px class="hx-inline-block hx-align-middle hx-mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true">&lt;path stroke-linecap="round" stroke-linejoin="round" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>&lt;/svg>Note&lt;/p>
&lt;div class="hx-w-full hx-min-w-0 hx-leading-7">
&lt;div class="hx-mt-6 hx-leading-7 first:hx-mt-0">&lt;p>You will need to include the full path for Copilot to find this file&lt;/p>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>This tells Copilot Chat to include the content of &lt;code>readme.prompt.md&lt;/code> as context for each request.&lt;/p>
&lt;h2>Example&lt;span class="hx-absolute -hx-mt-20" id="example">&lt;/span>
&lt;a href="#example" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Suppose you want Copilot to always follow your project’s code style. Create &lt;code>.github/prompts/codestyle.prompt.md&lt;/code>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">Always use 2 spaces for indentation and single quotes for strings.&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Then, update &lt;code>.vscode/settings.json&lt;/code>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">.vscode/settings.json&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;github.copilot.chat.codeGeneration.instructions&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="nt">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;.github/prompts/codestyle.prompt.md&amp;#34;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Now, Copilot Chat will automatically consider your code style instructions.&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/en/copilot/copilot-chat-cookbook" target="_blank" rel="noopener">GitHub Copilot Chat Cookbook&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/copilot/copilot-chat" target="_blank" rel="noopener">GitHub Copilot Chat Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/copilot/copilot-chat/configuring-copilot-chat" target="_blank" rel="noopener">Configuring Copilot Chat&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/copilot/using-github-copilot/best-practices-for-using-github-copilot" target="_blank" rel="noopener">Best Practices for Using GitHub Copilot&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>